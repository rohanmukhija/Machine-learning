import numpy as np
import pandas as pd
#importing headers

import matplotlib.pyplot as plt

# Importing the cars.csv dataset
dataset = pd.read_csv('https://raw.githubusercontent.com/WomenWhoCodeDelhi/PracticallyML/master/data/cars.csv')
#print first 10 rows of X
dataset.head(10)
X= dataset.iloc[: ,:-1]
X=X.convert_objects(convert_numeric=True)
X.head()
X.describe()

#construct X


# X = pd.DataFrame(X)
# X = X.convert_objects(convert_numeric=True)

#allot column names to X

# assigning mean values to null values

for col in X.columns:
    X[col]=X[col].fillna(X[col].mean())

#when we only want to do for a particular column
#X.isnull().any() 
#X[' cubicinches']=X[' cubicinches'].fillna(X[' cubicinches'].mean())
X.describe()

# Using the elbow method to find  the optimal number of clusters

#import kmean
from sklearn.cluster import KMeans
wcss=[]
for i in range(1,11):
    kmeans=KMeans(n_clusters=i)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)
plt.plot(range(1,11),wcss)

# Applying k-means to the cars dataset
kmeans = KMeans(n_clusters=3,init='k-means++',max_iter=300,n_init=10,random_state=0) 
y_kmeans = kmeans.fit_predict(X)
y_kmeans
#X = X.as_matrix(columns=None)
#typr(X)


plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0,1],s=100,c='red',label='US')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1,1],s=100,c='blue',label='Japan')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2,1],s=100,c='green',label='Europe')
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=300,c='yellow',label='Centroids')
plt.title('Clusters of car brands')
plt.legend()
plt.show()

